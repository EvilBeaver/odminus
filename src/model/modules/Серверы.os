
Функция Инициализировать() Экспорт

	Возврат Настройки.ИнициализироватьТаблицу(СтруктураФайлаХранения());	

КонецФункции

Функция СтруктураФайлаХранения()

	Массив = Новый Массив();
	Массив.Добавить("Идентификатор");
	Массив.Добавить("НаименованиеПолное");
	Массив.Добавить("Наименование");
	Массив.Добавить("Домен");
	Массив.Добавить("ОС");
	Массив.Добавить("СетевойАдрес");
	Массив.Добавить("РежимЭнергосбережения");
	Массив.Добавить("Модель");
	Массив.Добавить("ДанныеПроцессора");
	Массив.Добавить("ДатаОбновленияДанных");

	Возврат Массив;

КонецФункции

Процедура ИнициализироватьТаблицуПроцессоров(ДанныеСервера) Экспорт
	ДанныеСервера.ДанныеПроцессора = Настройки.ИнициализироватьТаблицу(СтруктураТаблицыПроцессоров());
КонецПроцедуры

Функция СтруктураТаблицыПроцессоров()

	Массив = Новый Массив();
	Массив.Добавить("Процессор");
	Массив.Добавить("Процессор_Частота");
	Массив.Добавить("Процессор_КоличествоЯдер");
	Массив.Добавить("Процессор_КоличествоЛогическихПроцессоров");

	Возврат Массив;

КонецФункции

Функция ПолучитьСписок(ТекущиеНастройки = Неопределено) Экспорт

	Если ТекущиеНастройки = Неопределено Тогда
		ДанныеСерверов = Настройки.ПолучитьНастройки("Серверы");
	Иначе
		ДанныеСерверов = ТекущиеНастройки["Серверы"];
	КонецЕсли;

	ТаблицаСерверов = Инициализировать();

	Для Каждого ДанныеСервера Из ДанныеСерверов Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаСерверов.Добавить(), ДанныеСервера);
	КонецЦикла;

	Возврат ТаблицаСерверов;

КонецФункции

Функция ОбновитьДанныеСервера(ДанныеСервера, ТекущиеНастройки, ДатаОбновленияДанных) Экспорт

	ТаблицаСерверов = ПолучитьСписок();

	ПолноеИмяСервера = ВРег(ДанныеСервера.ComputerSystem.Hostname + "." + ДанныеСервера.ComputerSystem.Domain);

	НайденныйСервер = ТаблицаСерверов.Найти(ПолноеИмяСервера, "НаименованиеПолное");

	Если НайденныйСервер = Неопределено Тогда
		НайденныйСервер = ТаблицаСерверов.Добавить();
		НайденныйСервер.Идентификатор = Новый УникальныйИдентификатор();
	КонецЕсли;

	НайденныйСервер.НаименованиеПолное = ПолноеИмяСервера;
	НайденныйСервер.Наименование = ВРег(ДанныеСервера.ComputerSystem.Hostname);
	НайденныйСервер.Домен = ВРег(ДанныеСервера.ComputerSystem.Domain);
	НайденныйСервер.ОС = ДанныеСервера.OSData.Caption;
	НайденныйСервер.СетевойАдрес = "127.0.0.1";
	НайденныйСервер.РежимЭнергосбережения = ДанныеСервера.PowerPlan;
	НайденныйСервер.Модель = ДанныеСервера.ComputerSystem.Model;
	НайденныйСервер.ДатаОбновленияДанных = ДатаОбновленияДанных;
	
	ИнициализироватьТаблицуПроцессоров(НайденныйСервер);
	Если ТипЗнч(ДанныеСервера.CPUData) = Тип("Массив") Тогда
		Для Каждого ЭлементПроцессора Из ДанныеСервера.CPUData Цикл
			ДобавитьСтрокуПроцессора(НайденныйСервер.ДанныеПроцессора, ЭлементПроцессора);
		КонецЦикла;
	Иначе
		ДобавитьСтрокуПроцессора(НайденныйСервер.ДанныеПроцессора, ДанныеСервера.CPUData);	
	КонецЕсли;

	ТекущиеНастройки.Серверы = ТаблицаСерверов;

	Возврат НайденныйСервер.Идентификатор;

КонецФункции

Процедура ДобавитьСтрокуПроцессора(ДанныеПроцессора, ЭлементПроцессора)
	СтрокаПроцессора = ДанныеПроцессора.Добавить();		
	СтрокаПроцессора.Процессор = ЭлементПроцессора.Name;
	СтрокаПроцессора.Процессор_Частота = ЭлементПроцессора.MaxClockSpeed;
	СтрокаПроцессора.Процессор_КоличествоЯдер = ЭлементПроцессора.NumberOfCores;
	СтрокаПроцессора.Процессор_КоличествоЛогическихПроцессоров = ЭлементПроцессора.NumberOfLogicalProcessors;
КонецПроцедуры