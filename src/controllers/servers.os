
Функция Index() Экспорт
	
	ТаблицаСерверов = Серверы.ПолучитьСписок();
	Возврат Представление(ТаблицаСерверов);
	
КонецФункции

Функция Edit() Экспорт
	
	Идентификатор = ЗначенияМаршрута["id"];
	Если Идентификатор = Неопределено Тогда
		Возврат Перенаправление("/servers/index");
	КонецЕсли;
	
	ИдентификаторСервера = Новый УникальныйИдентификатор(Идентификатор);
	
	ТЗ      = Серверы.ПолучитьСписок();
	ТЗ.Колонки.Добавить("СписокСлужб");
	ТЗ.Колонки.Добавить("СписокКластеров");
	
	Элемент = ТЗ.Найти(ИдентификаторСервера, "Идентификатор");
	
	Если Элемент = Неопределено Тогда
		Возврат КодСостояния(404);
	КонецЕсли;
	
	ТаблицаСлужб = Службы.ПолучитьСписок();
	Элемент.СписокСлужб = ТаблицаСлужб.НайтиСтроки(Новый Структура("ИдентификаторСервера", ИдентификаторСервера));
	
	ТаблицаКластеров = Кластеры.ПолучитьСписок();
	Элемент.СписокКластеров = ТаблицаКластеров.НайтиСтроки(Новый Структура("ИдентификаторСервера", ИдентификаторСервера));
	
	Если ЗапросHttp.Метод = "POST" Тогда
		
		//СохранитьДанные(Элемент);
		//ЦентральныеСерверы.Записать(ТЗ);
		
		Возврат Перенаправление("/servers/index");
	Иначе
		// Передаем в представление "модель" - Элемент
		Возврат Представление("Item", Элемент);
	КонецЕсли;
	
КонецФункции

Функция Delete() Экспорт
	
	Идентификатор = ЗначенияМаршрута["id"];
	Если Идентификатор = Неопределено Тогда
		Возврат Перенаправление("/servers/index");
	КонецЕсли;
	
	ИдентификаторСервера = Новый УникальныйИдентификатор(Идентификатор);
	
	ТЗ      = Серверы.ПолучитьСписок();
	Элемент = ТЗ.Найти(ИдентификаторСервера, "Идентификатор");
	
	Если Элемент = Неопределено Тогда
		Возврат КодСостояния(404);
	КонецЕсли;
	
	ТЗ.Удалить(Элемент);
	
	ТаблицаСлужб = Службы.ПолучитьСписок();
	НайденныеСлужбы = ТаблицаСлужб.НайтиСтроки(Новый Структура("ИдентификаторСервера", ИдентификаторСервера));
	
	Для Каждого СтрокаСлужбы Из НайденныеСлужбы Цикл
		ТаблицаСлужб.Удалить(СтрокаСлужбы);
	КонецЦикла;
	
	ТаблицаКластеров = Кластеры.ПолучитьСписок();
	НайденныеКластеры = ТаблицаКластеров.НайтиСтроки(Новый Структура("ИдентификаторСервера", ИдентификаторСервера));

	Для Каждого СтрокаКластера Из НайденныеКластеры Цикл
		ТаблицаКластеров.Удалить(СтрокаКластера);
	КонецЦикла;

	мНастройки = Настройки.ГлобальныеНастройки;
	мНастройки["Службы"] = ТаблицаСлужб;
	мНастройки["Серверы"] = ТЗ;
	мНастройки["Кластеры"] = ТаблицаКластеров;
	
	Настройки.ТребуетсяОбновлениеНастроек = Истина;
	
	Возврат Перенаправление("/servers/index");
	
КонецФункции
