
Функция РазобратьПараметрыЗапроса(Знач Параметры) Экспорт
	
	Результат = Новый Соответствие;
	
	Пары = СтрРазделить(Сред(Параметры,2), "&");
	Для Каждого Пара Из Пары Цикл
		Поз = СтрНайти(Пара, "=");
		Если Поз <> 0 Тогда
			Ключ = Лев(Пара, Поз-1);
			Значение = Сред(Пара, Поз+1);
			Результат.Вставить(Ключ, Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПоляФормыВСтруктуру(ДанныеФормы) Экспорт
	
	Поля = Новый Структура;
	Для Каждого КлючИЗначение Из ДанныеФормы Цикл
		Поля.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат Поля;
	
КонецФункции

Функция ОбъектКластераВСтруктуру(ПараметрыОбъекта, ОбъектКластера) Экспорт
	
	ПоляОбъекта = Новый Структура;
	Для Каждого Описание Из ПараметрыОбъекта Цикл
		ПоляОбъекта.Вставить(Описание.Ключ, ОбъектКластера[Описание.Значение.ИмяПоляРак]); 
	КонецЦикла;
	
	Возврат ПоляОбъекта;
	
КонецФункции

Функция УстановитьЗаголовок(Знач Контроллер, Знач Заголовок = "") Экспорт
	
	Если ПустаяСтрока(Заголовок) Тогда
		Заголовок = "Odminus";
	КонецЕсли;
	
	Контроллер.ДанныеПредставления["Title"] = Заголовок;
	
КонецФункции

Функция УстановитьЗаголовокСтраницы(Знач Контроллер, Знач Заголовок = "") Экспорт
	
	Если ПустаяСтрока(Заголовок) Тогда
		Заголовок = "Odminus";
	КонецЕсли;
	
	Контроллер.ДанныеПредставления["TitlePage"] = Заголовок;
	
КонецФункции

Функция ПолучитьАдминистрированиеКластера(Знач СетевоеИмя, Знач Порт, Знач Версия1С = "8.3") Экспорт
	
	СетевойАдрес = СтрШаблон("%1:%2", СетевоеИмя, Порт);

	Администрирование = Новый УправлениеКластером1С(
		Версия1С,
		СетевойАдрес
	);
	Администрирование.УстановитьОбработчикОшибокКоманд(Новый ОбработчикОшибокRAC());

Возврат Администрирование;

КонецФункции

Функция ИдентификаторКластера(Знач ЗапросHttp) Экспорт
	Параметры = ЗапросHttp.ПараметрыЗапроса();
	Возврат Параметры["cluster"];
КонецФункции

Функция ИдентификаторАгента(Знач Маршрутизатор) Экспорт
	
	Идентификатор = Маршрутизатор.ЗначенияМаршрута["agent"];
	Возврат Идентификатор;
	
КонецФункции

Функция ПолучитьКластерПоИд(Знач Маршрутизатор) Экспорт
	ИдКластера = ИдентификаторКластера(Маршрутизатор.ЗапросHttp);
	Если ИдКластера = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Авторизация = Новый Авторизация(Маршрутизатор, "/");
	Авторизация.ВключитьАдминистрирование();
	Администрирование = Авторизация.АдминистрированиеКластера();
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("Ид",ИдКластера);
	Кластеры = Администрирование.Кластеры().Список(Отбор);
	Если Кластеры.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Кластеры[0];
КонецФункции

Функция ПолучитьИнформационнуюБазуПоИд(Маршрутизатор, Знач ИдентификаторИБ, Знач Кластер) Экспорт
	
	ИдентификаторИБ = ИдентификаторИБ(Маршрутизатор.ЗапросHttp);
	Если ИдентификаторИБ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Авторизация = Новый Авторизация(Маршрутизатор, "/");
	Авторизация.ВключитьАдминистрирование();
	Администрирование = Авторизация.АдминистрированиеКластера();
	
	Если ИдентификаторИБ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("Ид", ИдентификаторИБ);
	ИнформационныеБазы = Кластер.ИнформационныеБазы().Список(Отбор);
	Если ИнформационныеБазы.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИБ = ИнформационныеБазы[0];
	
	Возврат ИБ;
	
КонецФункции

Функция ПолучитьСписокСеансовИБ(ИБ) Экспорт
	
	Если ИБ = Неопределено Тогда
		Возврат Новый Массив;
	Иначе
		Возврат ИБ.Сеансы().Список();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСписокСоединенийИБ(ИБ) Экспорт
	Если ИБ = Неопределено Тогда
		Возврат Новый Массив;
	Иначе
		Возврат ИБ.Соединения().Список();
	КонецЕсли;
КонецФункции

Функция ИдентификаторИБ(Знач ЗапросHttp) Экспорт
	Параметры = ЗапросHttp.ПараметрыЗапроса();
	Возврат Параметры["db"];
КонецФункции

Функция ПолучитьСписокИнформационныхБазПоКластеру(Маршрутизатор, Кластер) Экспорт
	
	Если Кластер = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	// Авторизация
	Авторизация = Новый Авторизация(Маршрутизатор, "/");
	Авторизация.ВключитьАдминистрирование();
	Администрирование = Авторизация.АдминистрированиеКластера();
	
	Попытка
		ИнформационныеБазы = Кластер.ИнформационныеБазы().Список();
	Исключение
		ИнформационныеБазы = Новый Массив;
	КонецПопытки;
	
	Возврат ИнформационныеБазы;
	
КонецФункции

Функция ПолучитьИдентификаторИнформационнойБазыИзПараметровЗапроса(Знач Роутер) Экспорт
	Параметры = Роутер.ЗапросHttp.ПараметрыЗапроса();
	Возврат Параметры["db"];
КонецФункции

Функция ПолучитьЗначениеПараметраЗапроса(Знач Роутер, Знач ИмяПараметра) Экспорт
	Параметры = Роутер.ЗапросHttp.ПараметрыЗапроса();
	Возврат Параметры[ИмяПараметра];
КонецФункции

Функция ПолучитьОписаниеОшибки(ТекстОшибки) Экспорт
	
	МассивПолей = РазложитьСтрокуВМассивПодстрок(ТекстОшибки, "/");
	Попытка
		Возврат МассивПолей[2];
	Исключение
		Возврат ТекстОшибки;	
	КонецПопытки;
	
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",") Экспорт

	Возврат СтрРазделить(Строка, Разделитель);
	
КонецФункции

Функция ПолучитьТелоЗапросаИзПотока(ЗапросHTTP) Экспорт
	ПотокТелаЗапроса = ЗапросHTTP.ПолучитьТелоКакПоток();
	ЧтениеДанных = Новый ЧтениеДанных(ПотокТелаЗапроса);
	ДДЗапроса = ЧтениеДанных.Прочитать().ПолучитьДвоичныеДанные();
	СтрокаТелаЗапроса = ПолучитьСтрокуИзДвоичныхДанных(ДДЗапроса);
	Возврат СтрокаТелаЗапроса;
КонецФункции